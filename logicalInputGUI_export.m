function varargout = logicalInputGUI_export(varargin)
% LOGICALINPUTGUI_EXPORT MATLAB code for logicalInputGUI_export.fig
%      LOGICALINPUTGUI_EXPORT, by itself, creates a new LOGICALINPUTGUI_EXPORT or raises the existing
%      singleton*.
%
%      H = LOGICALINPUTGUI_EXPORT returns the handle to a new LOGICALINPUTGUI_EXPORT or the handle to
%      the existing singleton*.
%
%      LOGICALINPUTGUI_EXPORT('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in LOGICALINPUTGUI_EXPORT.M with the given input arguments.
%
%      LOGICALINPUTGUI_EXPORT('Property','Value',...) creates a new LOGICALINPUTGUI_EXPORT or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before logicalInputGUI_export_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to logicalInputGUI_export_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help logicalInputGUI_export

% Last Modified by GUIDE v2.5 13-Mar-2019 01:47:22

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @logicalInputGUI_export_OpeningFcn, ...
                   'gui_OutputFcn',  @logicalInputGUI_export_OutputFcn, ...
                   'gui_LayoutFcn',  @logicalInputGUI_export_LayoutFcn, ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before logicalInputGUI_export is made visible.
function logicalInputGUI_export_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to logicalInputGUI_export (see VARARGIN)

load('dataExclusion.mat');
Exc = double(Exc);

for i = 1:10
   tableui = sprintf('uitable%d',i);
   uit = handles.(tableui);
   A = squeeze(double(Exc(i,:,:)));
   uit.Data = logical(A');
   uit.ColumnEditable = true;
   uit.ColumnName = {'130 C', '140 C', '150 C', '160 C', '170 C'};
end


% Choose default command line output for logicalInputGUI_export
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes logicalInputGUI_export wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = logicalInputGUI_export_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes on button press in pushbutton1.
function pushbutton1_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
for i = 1:10
   tableui = sprintf('uitable%d',i);
   ExcFoldi = get(handles.(tableui),'Data');
   Exc(i,:,:) = ExcFoldi';
end

save('dataExclusion.mat','Exc')


% --- Creates and returns a handle to the GUI figure. 
function h1 = logicalInputGUI_export_LayoutFcn(policy)
% policy - create a new figure or use a singleton. 'new' or 'reuse'.

persistent hsingleton;
if strcmpi(policy, 'reuse') & ishandle(hsingleton)
    h1 = hsingleton;
    return;
end
load logicalInputGUI_export.mat


appdata = [];
appdata.GUIDEOptions = struct(...
    'active_h', [], ...
    'taginfo', struct(...
    'figure', 2, ...
    'text', 13, ...
    'uitable', 11, ...
    'pushbutton', 2), ...
    'override', 0, ...
    'release', [], ...
    'resize', 'none', ...
    'accessibility', 'callback', ...
    'mfile', 1, ...
    'callbacks', 1, ...
    'singleton', 1, ...
    'syscolorfig', 1, ...
    'blocking', 0, ...
    'lastSavedFile', 'C:\Users\jarra\Desktop\DSC\logicalInputGUI_export.m', ...
    'lastFilename', 'C:\Users\jarra\Desktop\DSC\logicalInputGUI.fig');
appdata.lastValidTag = 'figure1';
appdata.GUIDELayoutEditor = [];
appdata.initTags = struct(...
    'handle', [], ...
    'tag', 'figure1');

h1 = figure(...
'PaperUnits','inches',...
'Units','characters',...
'Position',[135.8 44.1941391941392 140.25 40.1904761904762],...
'Visible',get(0,'defaultfigureVisible'),...
'Color',get(0,'defaultfigureColor'),...
'IntegerHandle','off',...
'MenuBar','none',...
'Name','logicalInputGUI',...
'NumberTitle','off',...
'HandleVisibility','callback',...
'Tag','figure1',...
'Resize','off',...
'PaperPosition',get(0,'defaultfigurePaperPosition'),...
'PaperSize',[8.5 11],...
'PaperSizeMode',get(0,'defaultfigurePaperSizeMode'),...
'PaperType','usletter',...
'PaperTypeMode',get(0,'defaultfigurePaperTypeMode'),...
'PaperUnitsMode',get(0,'defaultfigurePaperUnitsMode'),...
'ScreenPixelsPerInchMode','manual',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'uitable1';
appdata.PropertyMetaData = {  {  'DataPropertyDimension' 'DataPropertyConditionedDimension' 'DataPropertySource' 'BackgroundColorPropertyDimension' 'ColumnNameTyped' 'RowNameTyped' } {  [4 2] [4 2] 'DataDefault' [2 3] {  blanks(0) blanks(0) blanks(0) blanks(0) blanks(0) } {  blanks(0) blanks(0) blanks(0) } } };

h2 = uitable(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuitableFontUnits'),...
'BackgroundColor',[1 1 1;0.941176470588235 0.941176470588235 0.941176470588235],...
'ColumnName',get(0,'defaultuitableColumnName'),...
'ColumnWidth',{  'auto' 'auto' 'auto' 'auto' 'auto' },...
'Data',{  blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0) },...
'RowName',get(0,'defaultuitableRowName'),...
'Position',[1 31.8095238095238 53.125 6.66666666666667],...
'ColumnEditable',mat{1},...
'ColumnFormat',{  [] [] [] [] [] },...
'RearrangeableColumns',get(0,'defaultuitableRearrangeableColumns'),...
'RowStriping',get(0,'defaultuitableRowStriping'),...
'CellEditCallback',blanks(0),...
'CellSelectionCallback',blanks(0),...
'Children',[],...
'Tooltip',blanks(0),...
'ForegroundColor',get(0,'defaultuitableForegroundColor'),...
'Enable',get(0,'defaultuitableEnable'),...
'Visible',get(0,'defaultuitableVisible'),...
'HandleVisibility',get(0,'defaultuitableHandleVisibility'),...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','uitable1',...
'UserData',[],...
'KeyPressFcn',blanks(0),...
'KeyReleaseFcn',blanks(0),...
'FontSize',get(0,'defaultuitableFontSize'),...
'FontName',get(0,'defaultuitableFontName'),...
'FontAngle',get(0,'defaultuitableFontAngle'),...
'FontWeight',get(0,'defaultuitableFontWeight'));

appdata = [];
appdata.lastValidTag = 'uitable2';

h3 = uitable(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuitableFontUnits'),...
'BackgroundColor',[1 1 1;0.941176470588235 0.941176470588235 0.941176470588235],...
'ColumnName',get(0,'defaultuitableColumnName'),...
'ColumnWidth',{  'auto' 'auto' 'auto' 'auto' 'auto' },...
'Data',{  blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0) },...
'RowName',get(0,'defaultuitableRowName'),...
'Position',[56 31.9047619047619 53.125 6.57142857142857],...
'ColumnEditable',mat{2},...
'ColumnFormat',{  [] [] [] [] [] },...
'RearrangeableColumns',get(0,'defaultuitableRearrangeableColumns'),...
'RowStriping',get(0,'defaultuitableRowStriping'),...
'CellEditCallback',blanks(0),...
'CellSelectionCallback',blanks(0),...
'Children',[],...
'Tooltip',blanks(0),...
'ForegroundColor',get(0,'defaultuitableForegroundColor'),...
'Enable',get(0,'defaultuitableEnable'),...
'Visible',get(0,'defaultuitableVisible'),...
'HandleVisibility',get(0,'defaultuitableHandleVisibility'),...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','uitable2',...
'UserData',[],...
'KeyPressFcn',blanks(0),...
'FontSize',get(0,'defaultuitableFontSize'),...
'FontName',get(0,'defaultuitableFontName'),...
'FontAngle',get(0,'defaultuitableFontAngle'),...
'FontWeight',get(0,'defaultuitableFontWeight'));

appdata = [];
appdata.lastValidTag = 'uitable3';

h4 = uitable(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuitableFontUnits'),...
'BackgroundColor',[1 1 1;0.941176470588235 0.941176470588235 0.941176470588235],...
'ColumnName',get(0,'defaultuitableColumnName'),...
'ColumnWidth',{  'auto' 'auto' 'auto' 'auto' 'auto' },...
'Data',{  blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0) },...
'RowName',get(0,'defaultuitableRowName'),...
'Position',[1 24.0952380952381 53.125 6.57142857142857],...
'ColumnEditable',mat{3},...
'ColumnFormat',{  [] [] [] [] [] },...
'RearrangeableColumns',get(0,'defaultuitableRearrangeableColumns'),...
'RowStriping',get(0,'defaultuitableRowStriping'),...
'CellEditCallback',blanks(0),...
'CellSelectionCallback',blanks(0),...
'Children',[],...
'Tooltip',blanks(0),...
'ForegroundColor',get(0,'defaultuitableForegroundColor'),...
'Enable',get(0,'defaultuitableEnable'),...
'Visible',get(0,'defaultuitableVisible'),...
'HandleVisibility',get(0,'defaultuitableHandleVisibility'),...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','uitable3',...
'UserData',[],...
'KeyPressFcn',blanks(0),...
'FontSize',get(0,'defaultuitableFontSize'),...
'FontName',get(0,'defaultuitableFontName'),...
'FontAngle',get(0,'defaultuitableFontAngle'),...
'FontWeight',get(0,'defaultuitableFontWeight'));

appdata = [];
appdata.lastValidTag = 'uitable4';

h5 = uitable(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuitableFontUnits'),...
'BackgroundColor',[1 1 1;0.941176470588235 0.941176470588235 0.941176470588235],...
'ColumnName',get(0,'defaultuitableColumnName'),...
'ColumnWidth',{  'auto' 'auto' 'auto' 'auto' 'auto' },...
'Data',{  blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0) },...
'RowName',get(0,'defaultuitableRowName'),...
'Position',[56 24.0952380952381 53.125 6.57142857142857],...
'ColumnEditable',mat{4},...
'ColumnFormat',{  [] [] [] [] [] },...
'RearrangeableColumns',get(0,'defaultuitableRearrangeableColumns'),...
'RowStriping',get(0,'defaultuitableRowStriping'),...
'CellEditCallback',blanks(0),...
'CellSelectionCallback',blanks(0),...
'Children',[],...
'Tooltip',blanks(0),...
'ForegroundColor',get(0,'defaultuitableForegroundColor'),...
'Enable',get(0,'defaultuitableEnable'),...
'Visible',get(0,'defaultuitableVisible'),...
'HandleVisibility',get(0,'defaultuitableHandleVisibility'),...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','uitable4',...
'UserData',[],...
'KeyPressFcn',blanks(0),...
'FontSize',get(0,'defaultuitableFontSize'),...
'FontName',get(0,'defaultuitableFontName'),...
'FontAngle',get(0,'defaultuitableFontAngle'),...
'FontWeight',get(0,'defaultuitableFontWeight'));

appdata = [];
appdata.lastValidTag = 'uitable5';

h6 = uitable(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuitableFontUnits'),...
'BackgroundColor',[1 1 1;0.941176470588235 0.941176470588235 0.941176470588235],...
'ColumnName',get(0,'defaultuitableColumnName'),...
'ColumnWidth',{  'auto' 'auto' 'auto' 'auto' 'auto' },...
'Data',{  blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0) },...
'RowName',get(0,'defaultuitableRowName'),...
'Position',[1 16.2857142857143 53.125 6.57142857142857],...
'ColumnEditable',mat{5},...
'ColumnFormat',{  [] [] [] [] [] },...
'RearrangeableColumns',get(0,'defaultuitableRearrangeableColumns'),...
'RowStriping',get(0,'defaultuitableRowStriping'),...
'CellEditCallback',blanks(0),...
'CellSelectionCallback',blanks(0),...
'Children',[],...
'Tooltip',blanks(0),...
'ForegroundColor',get(0,'defaultuitableForegroundColor'),...
'Enable',get(0,'defaultuitableEnable'),...
'Visible',get(0,'defaultuitableVisible'),...
'HandleVisibility',get(0,'defaultuitableHandleVisibility'),...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','uitable5',...
'UserData',[],...
'KeyPressFcn',blanks(0),...
'FontSize',get(0,'defaultuitableFontSize'),...
'FontName',get(0,'defaultuitableFontName'),...
'FontAngle',get(0,'defaultuitableFontAngle'),...
'FontWeight',get(0,'defaultuitableFontWeight'));

appdata = [];
appdata.lastValidTag = 'uitable6';

h7 = uitable(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuitableFontUnits'),...
'BackgroundColor',[1 1 1;0.941176470588235 0.941176470588235 0.941176470588235],...
'ColumnName',get(0,'defaultuitableColumnName'),...
'ColumnWidth',{  'auto' 'auto' 'auto' 'auto' 'auto' },...
'Data',{  blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0) },...
'RowName',get(0,'defaultuitableRowName'),...
'Position',[56 16.2857142857143 53.125 6.57142857142857],...
'ColumnEditable',mat{6},...
'ColumnFormat',{  [] [] [] [] [] },...
'RearrangeableColumns',get(0,'defaultuitableRearrangeableColumns'),...
'RowStriping',get(0,'defaultuitableRowStriping'),...
'CellEditCallback',blanks(0),...
'CellSelectionCallback',blanks(0),...
'Children',[],...
'Tooltip',blanks(0),...
'ForegroundColor',get(0,'defaultuitableForegroundColor'),...
'Enable',get(0,'defaultuitableEnable'),...
'Visible',get(0,'defaultuitableVisible'),...
'HandleVisibility',get(0,'defaultuitableHandleVisibility'),...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','uitable6',...
'UserData',[],...
'KeyPressFcn',blanks(0),...
'FontSize',get(0,'defaultuitableFontSize'),...
'FontName',get(0,'defaultuitableFontName'),...
'FontAngle',get(0,'defaultuitableFontAngle'),...
'FontWeight',get(0,'defaultuitableFontWeight'));

appdata = [];
appdata.lastValidTag = 'uitable7';

h8 = uitable(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuitableFontUnits'),...
'BackgroundColor',[1 1 1;0.941176470588235 0.941176470588235 0.941176470588235],...
'ColumnName',get(0,'defaultuitableColumnName'),...
'ColumnWidth',{  'auto' 'auto' 'auto' 'auto' 'auto' },...
'Data',{  blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0) },...
'RowName',get(0,'defaultuitableRowName'),...
'Position',[1 8.47619047619048 53.125 6.57142857142857],...
'ColumnEditable',mat{7},...
'ColumnFormat',{  [] [] [] [] [] },...
'RearrangeableColumns',get(0,'defaultuitableRearrangeableColumns'),...
'RowStriping',get(0,'defaultuitableRowStriping'),...
'CellEditCallback',blanks(0),...
'CellSelectionCallback',blanks(0),...
'Children',[],...
'Tooltip',blanks(0),...
'ForegroundColor',get(0,'defaultuitableForegroundColor'),...
'Enable',get(0,'defaultuitableEnable'),...
'Visible',get(0,'defaultuitableVisible'),...
'HandleVisibility',get(0,'defaultuitableHandleVisibility'),...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','uitable7',...
'UserData',[],...
'KeyPressFcn',blanks(0),...
'FontSize',get(0,'defaultuitableFontSize'),...
'FontName',get(0,'defaultuitableFontName'),...
'FontAngle',get(0,'defaultuitableFontAngle'),...
'FontWeight',get(0,'defaultuitableFontWeight'));

appdata = [];
appdata.lastValidTag = 'uitable8';

h9 = uitable(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuitableFontUnits'),...
'BackgroundColor',[1 1 1;0.941176470588235 0.941176470588235 0.941176470588235],...
'ColumnName',get(0,'defaultuitableColumnName'),...
'ColumnWidth',{  'auto' 'auto' 'auto' 'auto' 'auto' },...
'Data',{  blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0) },...
'RowName',get(0,'defaultuitableRowName'),...
'Position',[56 8.66666666666667 53.125 6.38095238095238],...
'ColumnEditable',mat{8},...
'ColumnFormat',{  [] [] [] [] [] },...
'RearrangeableColumns',get(0,'defaultuitableRearrangeableColumns'),...
'RowStriping',get(0,'defaultuitableRowStriping'),...
'CellEditCallback',blanks(0),...
'CellSelectionCallback',blanks(0),...
'Children',[],...
'Tooltip',blanks(0),...
'ForegroundColor',get(0,'defaultuitableForegroundColor'),...
'Enable',get(0,'defaultuitableEnable'),...
'Visible',get(0,'defaultuitableVisible'),...
'HandleVisibility',get(0,'defaultuitableHandleVisibility'),...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','uitable8',...
'UserData',[],...
'KeyPressFcn',blanks(0),...
'FontSize',get(0,'defaultuitableFontSize'),...
'FontName',get(0,'defaultuitableFontName'),...
'FontAngle',get(0,'defaultuitableFontAngle'),...
'FontWeight',get(0,'defaultuitableFontWeight'));

appdata = [];
appdata.lastValidTag = 'uitable9';

h10 = uitable(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuitableFontUnits'),...
'BackgroundColor',[1 1 1;0.941176470588235 0.941176470588235 0.941176470588235],...
'ColumnName',get(0,'defaultuitableColumnName'),...
'ColumnWidth',{  'auto' 'auto' 'auto' 'auto' 'auto' },...
'Data',{  blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0) },...
'RowName',get(0,'defaultuitableRowName'),...
'Position',[1 0.857142857142857 53.125 6.38095238095238],...
'ColumnEditable',mat{9},...
'ColumnFormat',{  [] [] [] [] [] },...
'RearrangeableColumns',get(0,'defaultuitableRearrangeableColumns'),...
'RowStriping',get(0,'defaultuitableRowStriping'),...
'CellEditCallback',blanks(0),...
'CellSelectionCallback',blanks(0),...
'Children',[],...
'Tooltip',blanks(0),...
'ForegroundColor',get(0,'defaultuitableForegroundColor'),...
'Enable',get(0,'defaultuitableEnable'),...
'Visible',get(0,'defaultuitableVisible'),...
'HandleVisibility',get(0,'defaultuitableHandleVisibility'),...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','uitable9',...
'UserData',[],...
'KeyPressFcn',blanks(0),...
'FontSize',get(0,'defaultuitableFontSize'),...
'FontName',get(0,'defaultuitableFontName'),...
'FontAngle',get(0,'defaultuitableFontAngle'),...
'FontWeight',get(0,'defaultuitableFontWeight'));

appdata = [];
appdata.lastValidTag = 'uitable10';

h11 = uitable(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuitableFontUnits'),...
'BackgroundColor',[1 1 1;0.941176470588235 0.941176470588235 0.941176470588235],...
'ColumnName',get(0,'defaultuitableColumnName'),...
'ColumnWidth',{  'auto' 'auto' 'auto' 'auto' 'auto' },...
'Data',{  blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0) },...
'RowName',get(0,'defaultuitableRowName'),...
'Position',[56 0.952380952380952 53.125 6.28571428571429],...
'ColumnEditable',mat{10},...
'ColumnFormat',{  [] [] [] [] [] },...
'RearrangeableColumns',get(0,'defaultuitableRearrangeableColumns'),...
'RowStriping',get(0,'defaultuitableRowStriping'),...
'CellEditCallback',blanks(0),...
'CellSelectionCallback',blanks(0),...
'Children',[],...
'Tooltip',blanks(0),...
'ForegroundColor',get(0,'defaultuitableForegroundColor'),...
'Enable',get(0,'defaultuitableEnable'),...
'Visible',get(0,'defaultuitableVisible'),...
'HandleVisibility',get(0,'defaultuitableHandleVisibility'),...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','uitable10',...
'UserData',[],...
'KeyPressFcn',blanks(0),...
'FontSize',get(0,'defaultuitableFontSize'),...
'FontName',get(0,'defaultuitableFontName'),...
'FontAngle',get(0,'defaultuitableFontAngle'),...
'FontWeight',get(0,'defaultuitableFontWeight'));

appdata = [];
appdata.lastValidTag = 'text2';

h12 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','Folder 1',...
'Style','text',...
'Position',[2.625 38.4285714285714 8.625 0.952380952380949],...
'Children',[],...
'Tag','text2',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text3';

h13 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','Folder 2',...
'Style','text',...
'Position',[56.875 38.4285714285714 8.625 0.952380952380949],...
'Children',[],...
'Tag','text3',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text4';

h14 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','Folder 3',...
'Style','text',...
'Position',[1.875 30.5714285714286 8.625 0.952380952380953],...
'Children',[],...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'Tag','text4');

appdata = [];
appdata.lastValidTag = 'text5';

h15 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','Folder 4',...
'Style','text',...
'Position',[56.875 30.5714285714286 8.625 1.14285714285714],...
'Children',[],...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'Tag','text5');

appdata = [];
appdata.lastValidTag = 'text6';

h16 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','Folder 5',...
'Style','text',...
'Position',[2.5 23.047619047619 8.625 0.952380952380953],...
'Children',[],...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'Tag','text6');

appdata = [];
appdata.lastValidTag = 'text7';

h17 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','Folder 6',...
'Style','text',...
'Position',[56.125 22.952380952381 8.625 0.952380952380953],...
'Children',[],...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'Tag','text7');

appdata = [];
appdata.lastValidTag = 'text8';

h18 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','Folder 7',...
'Style','text',...
'Position',[1.875 15.0952380952381 8.625 0.952380952380953],...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','text8');

appdata = [];
appdata.lastValidTag = 'text9';

h19 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','Folder 8',...
'Style','text',...
'Position',[56.875 15.0952380952381 8.625 1.14285714285714],...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','text9');

appdata = [];
appdata.lastValidTag = 'text10';

h20 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','Folder 9',...
'Style','text',...
'Position',[2.75 7.47619047619048 8.625 0.952380952380952],...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','text10');

appdata = [];
appdata.lastValidTag = 'text11';

h21 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','Folder 10',...
'Style','text',...
'Position',[56.125 7.47619047619048 8.625 0.952380952380952],...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','text11');

appdata = [];
appdata.lastValidTag = 'pushbutton1';

h22 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','Update & Save',...
'Style',get(0,'defaultuicontrolStyle'),...
'Position',[116.625 1.76190476190476 16.25 4.66666666666667],...
'Callback',@(hObject,eventdata)logicalInputGUI_export('pushbutton1_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','pushbutton1',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text12';

h23 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','dataExclusion.mat',...
'Style','text',...
'Position',[115.25 0.333333333333333 18.5 0.952380952380952],...
'Children',[],...
'Tag','text12',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );


hsingleton = h1;


% --- Set application data first then calling the CreateFcn. 
function local_CreateFcn(hObject, eventdata, createfcn, appdata)

if ~isempty(appdata)
   names = fieldnames(appdata);
   for i=1:length(names)
       name = char(names(i));
       setappdata(hObject, name, getfield(appdata,name));
   end
end

if ~isempty(createfcn)
   if isa(createfcn,'function_handle')
       createfcn(hObject, eventdata);
   else
       eval(createfcn);
   end
end


% --- Handles default GUIDE GUI creation and callback dispatch
function varargout = gui_mainfcn(gui_State, varargin)

gui_StateFields =  {'gui_Name'
    'gui_Singleton'
    'gui_OpeningFcn'
    'gui_OutputFcn'
    'gui_LayoutFcn'
    'gui_Callback'};
gui_Mfile = '';
for i=1:length(gui_StateFields)
    if ~isfield(gui_State, gui_StateFields{i})
        error(message('MATLAB:guide:StateFieldNotFound', gui_StateFields{ i }, gui_Mfile));
    elseif isequal(gui_StateFields{i}, 'gui_Name')
        gui_Mfile = [gui_State.(gui_StateFields{i}), '.m'];
    end
end

numargin = length(varargin);

if numargin == 0
    % LOGICALINPUTGUI_EXPORT
    % create the GUI only if we are not in the process of loading it
    % already
    gui_Create = true;
elseif local_isInvokeActiveXCallback(gui_State, varargin{:})
    % LOGICALINPUTGUI_EXPORT(ACTIVEX,...)
    vin{1} = gui_State.gui_Name;
    vin{2} = [get(varargin{1}.Peer, 'Tag'), '_', varargin{end}];
    vin{3} = varargin{1};
    vin{4} = varargin{end-1};
    vin{5} = guidata(varargin{1}.Peer);
    feval(vin{:});
    return;
elseif local_isInvokeHGCallback(gui_State, varargin{:})
    % LOGICALINPUTGUI_EXPORT('CALLBACK',hObject,eventData,handles,...)
    gui_Create = false;
else
    % LOGICALINPUTGUI_EXPORT(...)
    % create the GUI and hand varargin to the openingfcn
    gui_Create = true;
end

if ~gui_Create
    % In design time, we need to mark all components possibly created in
    % the coming callback evaluation as non-serializable. This way, they
    % will not be brought into GUIDE and not be saved in the figure file
    % when running/saving the GUI from GUIDE.
    designEval = false;
    if (numargin>1 && ishghandle(varargin{2}))
        fig = varargin{2};
        while ~isempty(fig) && ~ishghandle(fig,'figure')
            fig = get(fig,'parent');
        end
        
        designEval = isappdata(0,'CreatingGUIDEFigure') || (isscalar(fig)&&isprop(fig,'GUIDEFigure'));
    end
        
    if designEval
        beforeChildren = findall(fig);
    end
    
    % evaluate the callback now
    varargin{1} = gui_State.gui_Callback;
    if nargout
        [varargout{1:nargout}] = feval(varargin{:});
    else       
        feval(varargin{:});
    end
    
    % Set serializable of objects created in the above callback to off in
    % design time. Need to check whether figure handle is still valid in
    % case the figure is deleted during the callback dispatching.
    if designEval && ishghandle(fig)
        set(setdiff(findall(fig),beforeChildren), 'Serializable','off');
    end
else
    if gui_State.gui_Singleton
        gui_SingletonOpt = 'reuse';
    else
        gui_SingletonOpt = 'new';
    end

    % Check user passing 'visible' P/V pair first so that its value can be
    % used by oepnfig to prevent flickering
    gui_Visible = 'auto';
    gui_VisibleInput = '';
    for index=1:2:length(varargin)
        if length(varargin) == index || ~ischar(varargin{index})
            break;
        end

        % Recognize 'visible' P/V pair
        len1 = min(length('visible'),length(varargin{index}));
        len2 = min(length('off'),length(varargin{index+1}));
        if ischar(varargin{index+1}) && strncmpi(varargin{index},'visible',len1) && len2 > 1
            if strncmpi(varargin{index+1},'off',len2)
                gui_Visible = 'invisible';
                gui_VisibleInput = 'off';
            elseif strncmpi(varargin{index+1},'on',len2)
                gui_Visible = 'visible';
                gui_VisibleInput = 'on';
            end
        end
    end
    
    % Open fig file with stored settings.  Note: This executes all component
    % specific CreateFunctions with an empty HANDLES structure.

    
    % Do feval on layout code in m-file if it exists
    gui_Exported = ~isempty(gui_State.gui_LayoutFcn);
    % this application data is used to indicate the running mode of a GUIDE
    % GUI to distinguish it from the design mode of the GUI in GUIDE. it is
    % only used by actxproxy at this time.   
    setappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]),1);
    if gui_Exported
        gui_hFigure = feval(gui_State.gui_LayoutFcn, gui_SingletonOpt);

        % make figure invisible here so that the visibility of figure is
        % consistent in OpeningFcn in the exported GUI case
        if isempty(gui_VisibleInput)
            gui_VisibleInput = get(gui_hFigure,'Visible');
        end
        set(gui_hFigure,'Visible','off')

        % openfig (called by local_openfig below) does this for guis without
        % the LayoutFcn. Be sure to do it here so guis show up on screen.
        movegui(gui_hFigure,'onscreen');
    else
        gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);
        % If the figure has InGUIInitialization it was not completely created
        % on the last pass.  Delete this handle and try again.
        if isappdata(gui_hFigure, 'InGUIInitialization')
            delete(gui_hFigure);
            gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);
        end
    end
    if isappdata(0, genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]))
        rmappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]));
    end

    % Set flag to indicate starting GUI initialization
    setappdata(gui_hFigure,'InGUIInitialization',1);

    % Fetch GUIDE Application options
    gui_Options = getappdata(gui_hFigure,'GUIDEOptions');
    % Singleton setting in the GUI MATLAB code file takes priority if different
    gui_Options.singleton = gui_State.gui_Singleton;

    if ~isappdata(gui_hFigure,'GUIOnScreen')
        % Adjust background color
        if gui_Options.syscolorfig
            set(gui_hFigure,'Color', get(0,'DefaultUicontrolBackgroundColor'));
        end

        % Generate HANDLES structure and store with GUIDATA. If there is
        % user set GUI data already, keep that also.
        data = guidata(gui_hFigure);
        handles = guihandles(gui_hFigure);
        if ~isempty(handles)
            if isempty(data)
                data = handles;
            else
                names = fieldnames(handles);
                for k=1:length(names)
                    data.(char(names(k)))=handles.(char(names(k)));
                end
            end
        end
        guidata(gui_hFigure, data);
    end

    % Apply input P/V pairs other than 'visible'
    for index=1:2:length(varargin)
        if length(varargin) == index || ~ischar(varargin{index})
            break;
        end

        len1 = min(length('visible'),length(varargin{index}));
        if ~strncmpi(varargin{index},'visible',len1)
            try set(gui_hFigure, varargin{index}, varargin{index+1}), catch break, end
        end
    end

    % If handle visibility is set to 'callback', turn it on until finished
    % with OpeningFcn
    gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
    if strcmp(gui_HandleVisibility, 'callback')
        set(gui_hFigure,'HandleVisibility', 'on');
    end

    feval(gui_State.gui_OpeningFcn, gui_hFigure, [], guidata(gui_hFigure), varargin{:});

    if isscalar(gui_hFigure) && ishghandle(gui_hFigure)
        % Handle the default callbacks of predefined toolbar tools in this
        % GUI, if any
        guidemfile('restoreToolbarToolPredefinedCallback',gui_hFigure); 
        
        % Update handle visibility
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);

        % Call openfig again to pick up the saved visibility or apply the
        % one passed in from the P/V pairs
        if ~gui_Exported
            gui_hFigure = local_openfig(gui_State.gui_Name, 'reuse',gui_Visible);
        elseif ~isempty(gui_VisibleInput)
            set(gui_hFigure,'Visible',gui_VisibleInput);
        end
        if strcmpi(get(gui_hFigure, 'Visible'), 'on')
            figure(gui_hFigure);
            
            if gui_Options.singleton
                setappdata(gui_hFigure,'GUIOnScreen', 1);
            end
        end

        % Done with GUI initialization
        if isappdata(gui_hFigure,'InGUIInitialization')
            rmappdata(gui_hFigure,'InGUIInitialization');
        end

        % If handle visibility is set to 'callback', turn it on until
        % finished with OutputFcn
        gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
        if strcmp(gui_HandleVisibility, 'callback')
            set(gui_hFigure,'HandleVisibility', 'on');
        end
        gui_Handles = guidata(gui_hFigure);
    else
        gui_Handles = [];
    end

    if nargout
        [varargout{1:nargout}] = feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    else
        feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    end

    if isscalar(gui_hFigure) && ishghandle(gui_hFigure)
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);
    end
end

function gui_hFigure = local_openfig(name, singleton, visible)

% openfig with three arguments was new from R13. Try to call that first, if
% failed, try the old openfig.
if nargin('openfig') == 2
    % OPENFIG did not accept 3rd input argument until R13,
    % toggle default figure visible to prevent the figure
    % from showing up too soon.
    gui_OldDefaultVisible = get(0,'defaultFigureVisible');
    set(0,'defaultFigureVisible','off');
    gui_hFigure = matlab.hg.internal.openfigLegacy(name, singleton);
    set(0,'defaultFigureVisible',gui_OldDefaultVisible);
else
    % Call version of openfig that accepts 'auto' option"
    gui_hFigure = matlab.hg.internal.openfigLegacy(name, singleton, visible);  
%     %workaround for CreateFcn not called to create ActiveX
%         peers=findobj(findall(allchild(gui_hFigure)),'type','uicontrol','style','text');    
%         for i=1:length(peers)
%             if isappdata(peers(i),'Control')
%                 actxproxy(peers(i));
%             end            
%         end
end

function result = local_isInvokeActiveXCallback(gui_State, varargin)

try
    result = ispc && iscom(varargin{1}) ...
             && isequal(varargin{1},gcbo);
catch
    result = false;
end

function result = local_isInvokeHGCallback(gui_State, varargin)

try
    fhandle = functions(gui_State.gui_Callback);
    result = ~isempty(findstr(gui_State.gui_Name,fhandle.file)) || ...
             (ischar(varargin{1}) ...
             && isequal(ishghandle(varargin{2}), 1) ...
             && (~isempty(strfind(varargin{1},[get(varargin{2}, 'Tag'), '_'])) || ...
                ~isempty(strfind(varargin{1}, '_CreateFcn'))) );
catch
    result = false;
end


